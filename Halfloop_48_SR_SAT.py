# Rotate
# -------------------------------------------------
# 行移位 实际上是赋值
# r5S1 G0最高位添0  G1最高位添1
# SR前
# G0
# A_1=[1215,1216,1217,1218,1219,1220,1221,1222]
# G1
# A_1=[1223,1224,1225,1226,1227,1228,1229,1230]
# SR后
# G0
# B_1=[1316,1317,1318,1319,1320,1321,1322,1323]
# G1
# B_1=[1324,1325,1326,1327,1328,1329,1330,1331]
# AB=zip(A_1,B_1)
# print('S1')
# G0
# print('-%d 0'%B_1[0])
# G1
# print('%d 0'%B_1[0])
# 低7bit
# for i in range(7):
#      print('-%d %d 0'% (A_1[i],B_1[i+1]))
#      print('%d -%d 0' % (A_1[i],B_1[i+1]))

#S4
# SR前
C_1=[573,574,575,576,577,578,579,580]
# SR后
D_1=[1365,1366,1367,1368,1369,1370,1371,1372]
# CD=zip(C_1,D_1)
# print('S4')
# for c,d in CD:
#     print('-%d %d 0' % (c,d))
#     print('%d -%d 0' % (c,d))

# SR前S2G0
A_2=[]
# SR前S2G0
for i in range(596,603):
    A_2.append(i)
#
for i in range(1127,1136):
    A_2.append(i)
A_2=[1251,1252,1253,1254,1255,1256,1257,1258]
# s2G1
# A_2=[1142,1143,1144,1145,1146,1147,1148,1149]
# SR前S5G0
# B_2=[777,778,779,780,781,782,783,784]
# SR前S5G1
B_2=[785,786,787,788,789,790,791,792]
# S2G0的SR后
# C_2=[1332,1333,1334,1335,1336,1337,1338,1339]
# G1
C_2=[1340,1341,1342,1343,1344,1345,1346,1347]
# S5 SR后的G0
# D_2=[1381,1382,1383,1384,1385,1386,1387,1388]
# S5 SR后的G1
D_2=[1389,1390,1391,1392,1393,1394,1395,1396]
print('S2')
# S2的 SR后的高2bit
for i in range(6,8):
    j=6
    print('-%d %d 0'% (A_2[i],C_2[i-j]))
    print('%d -%d 0' % (A_2[i],C_2[i-j]))
# S2G0的SR后的第3bit
# print('-%d 0' % (C_2[2]))
# S2G1的SR后的第3bit
# print('%d 0' % (C_2[2]))
# 低6bit
for i in range(0,6):
    j=2
    print('-%d %d 0' % (B_2[i], C_2[i + j]))
    print('%d -%d 0' % (B_2[i], C_2[i + j]))

print('S5')
# S5的SR后的高2bit
for i in range(6,8):
    j=6
    print('-%d %d 0' % (B_2[i], D_2[i - j]))
    print('%d -%d 0' % (B_2[i], D_2[i - j]))
# S5SR后的低6bit
for i in range(0,6):
    j=2
    print('-%d %d 0' % (A_2[i], D_2[i + j]))
    print('%d -%d 0' % (A_2[i], D_2[i + j]))

# S3
# SR前的S3G0
# A_3=[1267,1268,1269,1270,1271,1272,1273,1274]
# G1
A_3=[1275,1276,1277,1278,1279,1280,1281,1282]
# SR前的S6G0
# B_3=[0,701,702,703,704,705,706,707]
# SR前的S6G1
# B_3=[1,710,711,712,713,714,715,716]
# sr前的s6
B_3=[1283,1284,1285,1286,1287,1288,1289,1290]
# SR后的S3G0
# C_3=[1348,1349,1350,1351,1352,1353,1354,1355]
# G1
C_3=[1357,1358,1359,1360,1361,1362,1363,1364]
# SR后的S6G0
# D_3=[1397,1398,1399,1400,1401,1402,1403,1404]
# SR后的S6G1
D_3=[1405,1406,1407,1408,1409,1410,1411,1412]

print('S3')
# S3SR后的高4bit
for i in range(4):
    j=4
    print('-%d %d 0' % (B_3[i+j], C_3[i]))
    print('%d -%d 0' % (B_3[i+j], C_3[i]))
# S3SR后的低4bit
for i in range(4):
    j=4
    print('-%d %d 0' % (A_3[i], C_3[i+j]))
    print('%d -%d 0' % (A_3[i], C_3[i+j]))
print('S6')
# S6SR后的高4bit
for i in range(4):
    j=4
    print('-%d %d 0' % (A_3[i+j], D_3[i]))
    print('%d -%d 0' % (A_3[i+j], D_3[i]))
# S6G0 SR后的第5bit
# print('-%d 0'%(D_3[4]))
# S6G1 SR后的第5bit
# print('%d 0'%(D_3[4]))
# S6SR后的低4bit
for i in range(0,4):
    j=4
    print('-%d %d 0' % (B_3[i], D_3[i+j]))
    print('%d -%d 0' % (B_3[i], D_3[i+j]))