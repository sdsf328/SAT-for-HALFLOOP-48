# HalfLoop中间三轮r4+r5+r6+r6-1+r5-1+r4-1的目标函数
# 中间三轮的目标函数： xs<=z（概率）, 0=<s<=c-1（s盒的数量）
# c=8 z=8 额外变量：l(s,t)从2000号开始

# x0,x1,x2。。。变量数组：r4s1BCT,r5s1BCT,r5s6BCT,r6s1BCT,r6s6BCT,r6invers1DDT,r6invers6DDT,r5invers1DDT
# 概率情况（0，1），（1，0），（1，1）
# 概率最低bit变量数组
x=[194, 726, 1229, 1261, 4041, 4095,5235, 5391]
   # 169, 170, 725, 726, 1228, 1229, 1260, 1261, 4040, 4041, 4198, 4199, 5234, 5235]
# 概率次低bit变量数组
# x=[193,169,725,1228,1260,4040,4198,5234]
# 0=<s<=7
# 0=<z<=3
k=8
l=2000
# -x0 l0,0 0
print('-%d %d 0' % (x[0], l))
l += 1
while(l<=2000+(k-1)):
    # -l0,1 0
    # ...
    # -l0,z-1 0
    print('-%d 0'%l)
    l += 1
#外循环是s盒的数量
for c in range(1,8):
        # s=1
        # print('s=%d'%c)
        print('-%d %d 0'%(x[c],l))
        print('-%d %d 0'%(l-k,l))
        # 内循环是概率数值
        for z in range(1,k):
            # t=1
            # print('t=%d'%(z))
            print('-%d -%d %d 0'%(x[c],l-k,l+1))
            l+=1
            print('-%d %d 0'%(l-k,l))
        print('-%d -%d 0'%(x[c],l-k))
        l+=1
print('-%d -%d 0'%(x[7],l-1))





